" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
" }
"
" Environment {
    " Setup Plugin Support {
        call plug#begin($MYPLUGINS)
    " }

" }

" Plugins {

    " Deps {
        Plug 'MarcWeber/vim-addon-mw-utils'
        Plug 'tomtom/tlib_vim'
        if executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Plug 'mileszs/ack.vim'
        elseif executable('ack')
            Plug 'mileszs/ack.vim'
        elseif executable('ag')
            Plug 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        endif
    " }

    " General {
            Plug 'scrooloose/nerdtree'
            Plug 'Xuyuanp/nerdtree-git-plugin'
            Plug 'arcticicestudio/nord-vim', { 'tag': 'v0.10.0' }
            Plug 'tpope/vim-surround'
            Plug 'tpope/vim-repeat'
            Plug 'kien/ctrlp.vim'
            Plug 'terryma/vim-multiple-cursors'
            Plug 'vim-scripts/sessionman.vim'
            Plug 'itchyny/lightline.vim'
            Plug 'bling/vim-bufferline'
            Plug 'jistr/vim-nerdtree-tabs'
            Plug 'mbbill/undotree'
            Plug 'myusuf3/numbers.vim'
            Plug 'nathanaelkane/vim-indent-guides'
            Plug 'ryanoasis/vim-devicons'
            Plug 'vim-scripts/restore_view.vim'
            Plug 'mhinz/vim-signify'
            Plug 'tpope/vim-abolish.git'
            Plug 'osyo-manga/vim-over'
            Plug 'kana/vim-textobj-user'
            Plug 'kana/vim-textobj-indent'
            Plug 'gcmt/wildfire.vim'
    " }

    " General Programming {
            " Pick one of the checksyntax, jslint, or syntastic
            Plug 'scrooloose/syntastic'
            Plug 'tpope/vim-fugitive'
            Plug 'mattn/webapi-vim'
            Plug 'mattn/gist-vim'
            Plug 'scrooloose/nerdcommenter'
            Plug 'tpope/vim-commentary'
            if executable('ctags')
                Plug 'majutsushi/tagbar'
            endif
    " }

    " Snippets & AutoComplete {
            Plug 'SirVer/ultisnips'
            Plug 'honza/vim-snippets'
            Plug 'Shougo/deoplete.nvim'
            Plug 'roxma/nvim-yarp'
            Plug 'roxma/vim-hug-neovim-rpc'
    " }

    " Go Lang {
            Plug 'fatih/vim-go'
            Plug 'AndrewRadev/splitjoin.vim'
            Plug 'deoplete-plugins/deoplete-go', { 'do': 'make'}
    " }

    " Misc {
            Plug 'tpope/vim-markdown'
            Plug 'cespare/vim-toml'
    " }

    call plug#end()

" }
