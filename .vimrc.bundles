" Modeline and Notes {
" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
"
"   This is the personal .vimrc.bundles file of Steve Francia.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
"   You can find me at http://spf13.com
" }
"
" Environment {
    " Setup Plugin Support {
        filetype off
        set rtp+=$MYVUNDLE
        call vundle#begin($MYBUNDLE)
    " }

    " Add an UnPlugin command {
    function! UnPlugin(arg, ...)
      let bundle = vundle#config#init_bundle(a:arg, a:000)
      call filter(g:bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    endfunction

    com! -nargs=+         UnPlugin
    \ call UnPlugin(<args>)
    " }
" }

" Plugins {

    " Deps {
        Plugin 'gmarik/Vundle.vim'
        Plugin 'MarcWeber/vim-addon-mw-utils'
        Plugin 'tomtom/tlib_vim'
        if executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Plugin 'mileszs/ack.vim'
        elseif executable('ack')
            Plugin 'mileszs/ack.vim'
        elseif executable('ag')
            Plugin 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        endif
    " }

    " In your .vimrc.bundles.local file"
    " list only the plugin groups you will use
    if !exists('g:spf13_bundle_groups')
        let g:spf13_bundle_groups=['general', 'writing', 'neocomplcache', 'programming', 'python', 'javascript', 'html', 'misc', 'java']
    endif

    " To override all the included bundles, put
    " g:override_spf13_bundles = 1
    " in your .vimrc.bundles.local file"
    if !exists("g:override_spf13_bundles")

    " General {
        if count(g:spf13_bundle_groups, 'general')
            Plugin 'scrooloose/nerdtree'
            Plugin 'Xuyuanp/nerdtree-git-plugin'
            Plugin 'altercation/vim-colors-solarized'
            Plugin 'tpope/vim-surround'
            Plugin 'tpope/vim-repeat'
            Plugin 'kien/ctrlp.vim'
            Plugin 'terryma/vim-multiple-cursors'
            Plugin 'vim-scripts/sessionman.vim'
            Plugin 'matchit.zip'
            Plugin 'itchyny/lightline.vim'
            Plugin 'bling/vim-bufferline'
            Plugin 'Lokaltog/vim-easymotion'
            Plugin 'jistr/vim-nerdtree-tabs'
            Plugin 'mbbill/undotree'
            Plugin 'myusuf3/numbers.vim'
            Plugin 'nathanaelkane/vim-indent-guides'
            Plugin 'ryanoasis/vim-devicons'
            if !exists('g:spf13_no_views')
                Plugin 'vim-scripts/restore_view.vim'
            endif
            Plugin 'mhinz/vim-signify'
            Plugin 'tpope/vim-abolish.git'
            Plugin 'osyo-manga/vim-over'
            Plugin 'kana/vim-textobj-user'
            Plugin 'kana/vim-textobj-indent'
            Plugin 'gcmt/wildfire.vim'
        endif
    " }

    " Writing {
        if count(g:spf13_bundle_groups, 'writing')
            Plugin 'reedes/vim-litecorrect'
            Plugin 'reedes/vim-textobj-sentence'
            Plugin 'reedes/vim-textobj-quote'
            Plugin 'reedes/vim-wordy'
        endif
    " }
    
    " General Programming {
        if count(g:spf13_bundle_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            Plugin 'scrooloose/syntastic'
            Plugin 'tpope/vim-fugitive'
            Plugin 'mattn/webapi-vim'
            Plugin 'mattn/gist-vim'
            Plugin 'scrooloose/nerdcommenter'
            Plugin 'tpope/vim-commentary'
            Plugin 'godlygeek/tabular'
            if executable('ctags')
                Plugin 'majutsushi/tagbar'
            endif
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:spf13_bundle_groups, 'snipmate')
            Plugin 'garbas/vim-snipmate'
            Plugin 'honza/vim-snippets'
            " Source support_function.vim to support vim-snippets.
            if filereadable(expand($MYBUNDLE."/vim-snippets/snippets/support_functions.vim"))
                let $MYSNIPF=$MYBUNDLE . "/vim-snippets/snippets/support_functions.vim"
                source $MYSNIPF
            endif
        elseif count(g:spf13_bundle_groups, 'youcompleteme')
            Plugin 'Valloric/YouCompleteMe'
            Plugin 'SirVer/ultisnips'
            Plugin 'honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplcache')
            Plugin 'Shougo/neocomplcache'
            Plugin 'Shougo/neosnippet'
            Plugin 'Shougo/neosnippet-snippets'
            Plugin 'honza/vim-snippets'
        elseif count(g:spf13_bundle_groups, 'neocomplete')
            Plugin 'Shougo/neocomplete.vim.git'
            Plugin 'Shougo/neosnippet'
            Plugin 'Shougo/neosnippet-snippets'
            Plugin 'honza/vim-snippets'
        endif
    " }

    " Python {
        if count(g:spf13_bundle_groups, 'python')
            Plugin 'python.vim'
            Plugin 'python_match.vim'
            Plugin 'davidhalter/jedi-vim'

            " Disabled because they overlap with jedi-vim python completion"
            " Pick either python-mode or pyflakes & pydoc
            "Plugin 'klen/python-mode'
            "Plugin 'pythoncomplete'
        endif
    " }

    " Javascript {
        if count(g:spf13_bundle_groups, 'javascript')
            Plugin 'elzr/vim-json'
            Plugin 'groenewege/vim-less'
            Plugin 'pangloss/vim-javascript'
        endif
    " }

    " Java {
        if count(g:spf13_bundle_groups, 'java')
            Plugin 'artur-shaik/vim-javacomplete2'
            Plugin 'airblade/vim-rooter'
        endif
    " }"

    " HTML {
        if count(g:spf13_bundle_groups, 'html')
            Plugin 'amirh/HTML-AutoCloseTag'
            Plugin 'hail2u/vim-css3-syntax'
            Plugin 'gorodinskiy/vim-coloresque'
            Plugin 'tpope/vim-haml'
        endif
    " }

    " Go Lang {
        if count(g:spf13_bundle_groups, 'go')
            Plugin 'fatih/vim-go'
            Plugin 'AndrewRadev/splitjoin.vim'
            Plugin 'garyburd/go-explorer'
        endif
    " }

    " Misc {
        if count(g:spf13_bundle_groups, 'misc')
            Plugin 'tpope/vim-markdown'
            Plugin 'spf13/vim-preview'
            Plugin 'cespare/vim-toml'
            Plugin 'tpope/vim-cucumber'
            Plugin 'quentindecock/vim-cucumber-align-pipes'
            Plugin 'Puppet-Syntax-Highlighting'
        endif
    " }

    endif
    call vundle#end()

" }

